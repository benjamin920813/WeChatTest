var assert = require("assert")
var mocha = require("mocha");
var coMocha = require("co-mocha");

coMocha(mocha);

var app = {
	id: 'sh55d699000c5c6',
	secret: '2b96685501e268d5d313038d7ffb5171',
	name: "app26",
	server: 'http://127.0.0.1:3000'
};

var userid = '123';
var username = 'witwave';
var password = 'witwave';
var role = 'admin';
var profile = {
	age: 33,
	sex: 'ç”·'
};

var shoots = require('../shoots-toolkit')(app);

describe('add the user', function() {
	it('it should return 0', function*() {
		var result = yield shoots.user.add(userid, username, password, role, profile);
		assert.equal(0, result.errcode);
	})
});

describe('unique the user', function() {
	it('it should return user', function*() {
		var result = yield shoots.user.unique(username);
		assert.equal(username, result.username);
	})
});

describe('update the user', function() {
	it('it should return age[34] and job[coder]', function*() {
		var result = yield shoots.user.update(userid, null, null, null, {
			age: 34,
			job: 'coder'
		});
		assert.equal(0, result.errcode);
		var result = yield shoots.user.unique(username);
		assert.equal(34, result.profile.age);
		assert.equal(username, result.username);
		assert.equal('coder', result.profile.job);
	})
});

describe('remove the user', function() {
	it('it should return ok', function*() {
		var result = yield shoots.user.remove(userid);
		assert.equal(0, result.errcode);
		var result = yield shoots.user.unique(username);
		assert.equal(null, result);
	})
});