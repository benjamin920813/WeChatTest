var koa = require('koa');
var app = koa();
var router = require('koa-router')();

app
    .use(router.routes())
    .use(router.allowedMethods());
// x-response-time

app.use(function*(next) {
    var start = new Date;
    yield next;
    var ms = new Date - start;
    this.set('X-Response-Time', ms + 'ms');
});


var appOptions = {
    id: 'sh5600bbe2cef5a',
    secret: '44c04a63390014ab497fed3f58ee5ab3',
    name: "test",
    server: 'http://dev.api.zpage.me',
    cookieid: 'shsessionid'
};
var session = require('../../index')(appOptions);

// logger
app.use(function*(next) {
    var start = new Date;
    yield next;
    var ms = new Date - start;
    console.log('%s %s - %s', this.method, this.url, ms);
});


var name1 = 'user';

var value1 = {
    username: 'wave',
    userrole: "developer",
    userid: "009"
}

var name2 = 'cart';

var value2 = {
    productid: '1000',
    price: '200',
    qty: 1
}


router.get('/get', function*(next) {
    var val1 = yield session.get(this, name1);
    var val2 = yield session.get(this, name2);
    this.body = {
        flag1: val1 && value1.username == val1.username,
        flag2: val2 && value2.productid == val2.productid
    }
});

router.get('/set', function*(next) {
    var flag1 = yield session.set(this, name1, value1);
    var flag2 = yield session.set(this, name2, value2);
    this.body = {
        flag1: flag1,
        flag2: flag2
    }
});

router.get('/remove', function*(next) {
    var val = yield session.remove(this, name1);
    this.body = {
        flag: val,
    }
});

router.get('/clear', function*(next) {
    var val = yield session.clear(this);
    this.body = {
        flag: val,
    }
});

app.listen(3000);