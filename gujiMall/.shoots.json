{
  "appid": "sh5608f9adb0db1",
  "appsecret": "6c871a107b6432c554beb585191d2e09",
  "name": "gujiMall",
  "appserv": "http://api.zpage.me",
  "appserv_dev": "http://dev.api.zpage.me",
  "cookieid": "SHSESSIONID",
  "port": 5000,
  "appjs": ""
}